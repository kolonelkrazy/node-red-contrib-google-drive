name: Release and Publish

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Configure git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Get current version
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Get commit messages since last release
      run: |
        # Get the latest tag, fallback to first commit if no tags
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)
        
        # Get commit messages since last tag/first commit
        COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
        
        # Save to environment variable for use in release body
        echo "COMMIT_MESSAGES<<EOF" >> $GITHUB_ENV
        echo "$COMMITS" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
    - name: Create tarball
      run: npm pack
      
    - name: Create and push tag
      run: |
        git tag "v${{ env.CURRENT_VERSION }}"
        git push origin "v${{ env.CURRENT_VERSION }}"
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.CURRENT_VERSION }}
        name: Release v${{ env.CURRENT_VERSION }}
        body: |
          ## Changes
          ${{ env.COMMIT_MESSAGES }}
          
          ## Installation
          Download the tarball and install in Node-RED:
          ```bash
          npm install node-red-contrib-google-drive-${{ env.CURRENT_VERSION }}.tgz
          ```
        files: node-red-contrib-google-drive-${{ env.CURRENT_VERSION }}.tgz
        draft: false
        prerelease: false

  publish:
    needs: release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}